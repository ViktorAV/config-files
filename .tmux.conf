set -g default-terminal "screen-256color"
unbind C-b
set -g prefix C-a
# bind-key C-a send-prefix

set -g repeat-time 300
set -g set-titles on
set -g set-titles-string "#W:#I"
set -g base-index 1
setw -g pane-base-index 1
set -g mouse off

unbind "\$" # rename-session
unbind ,    # rename-window
unbind %    # split-window -h
unbind '"'  # split-window
unbind '}'    # swap-pane -D
unbind '{'    # swap-pane -U
unbind '['    # paste-buffer
unbind ']'    
unbind "'"  # select-window
unbind n    # next-window
unbind p    # previous-window
unbind l    # last-window
unbind M-n  # next window with alert
unbind M-p  # next window with alert
unbind o    # focus thru panes
unbind &    # kill-window
unbind "#"  # list-buffer 
unbind =    # choose-buffer
unbind z    # zoom-pane
unbind M-Up  # resize 5 rows up
unbind M-Down # resize 5 rows down
unbind M-Right # resize 5 rows right
unbind M-Left # resize 5 rows left

bind - split-window -h
bind | split-window -v
bind C-r source-file ~/.tmux.conf \; display "Config reloaded"
bind c new-window -c "#{pane_current_path}"
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"
bind | split-window -h -c "#{pane_current_path}"
bind _ split-window -v -c "#{pane_current_path}"
bind -r p previous-window
bind -r n next-window
bind -r C-[ select-pane -t :.-
bind -r C-] select-pane -t :.+
bind -r Tab last-window   # cycle thru MRU tabs
bind -r C-o swap-pane -D
bind + resize-pane -Z
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"
# bind \ if '[ #{pane_index} -eq 1 ]' \
#   'swap-pane -s "!"' \
#   'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session
bind C-u command-prompt -p "Session to merge with: " \
   "run-shell 'yes | head -n #{session_windows} | xargs -I {} -n 1 tmux movew -t %%'"
bind d detach
bind D if -F '#{session_many_attached}' \
  'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
  'display "Session has only 1 client attached"'
# Hide status bar on demand
  bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

selected_color="#ffa500"
text_color="#b2b2b2"

set -g mode-style "fg=default,bg=$selected_color"
set -g message-style "fg=$selected_color,bg=black"
set -g status-style "fg=$text_color,bg=black"
set -g window-status-separator " "
setw -g window-status-format "#W[#I]"
setw -g window-status-current-style "fg=black,bold,bg=$selected_color"
setw -g window-status-current-format " #W "
setw -g window-status-activity-style "fg=$selected_color"
setw -g pane-active-border-style "fg=$selected_color"
set -g status on
set -g status-interval 15
set -g status-position top
set -g status-justify left
set -g status-right-style "fg=$text_color, bg=default"
set -g status-right "%d/%m/%y #[fg=$text_color,bold, bg=default]%I:%M"
set -g status-left "#[fg=$selected_color, bg=default][#{session_name}] "
